@model PcHut.Models.product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
    <div class="form-horizontal">
        <h4>product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.product_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.brand_id, "brand_name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("brand_id", null, htmlAttributes: new { @class = "form-control" })*@
                <select name="brand_id">
                    @foreach (var item in ViewData["brands"] as IList<PcHut.Models.brand>)
                    {
                        <option value="@item.brand_id">
                            @item.brand_name
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.brand_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category_id, "category_name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("category_id", null, htmlAttributes: new { @class = "form-control" })*@
                <select name="category_id">
                    @foreach (var item in ViewData["categories"] as IList<PcHut.Models.category>)
                    {
                        <option value="@item.category_id">
                            @item.category_name
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
            </div>
        </div>



        @*<div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.warranty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.warranty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.warranty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label>Specification</label>
            <div class="col-md-10">
                <input type="text" name="specification" />
            </div>
        </div>
        <div class="form-group">
            <label>Special Category</label>
            <div class="col-md-10">
                <input type="text" name="extra" />
            </div>
        </div>


        <div class="form-group">
            @*@Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
            </div>*@
            <label>Product Picture</label> <br />
            <input type="file" name="image"> <br />
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
